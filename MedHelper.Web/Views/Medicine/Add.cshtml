@using Microsoft.AspNetCore.Mvc.TagHelpers
@model MedHelper.BLL.Dto.Medicine.CreateMedicineDto
@{
ViewData["Title"] = "Add patient";
}

<head xmlns="http://www.w3.org/1999/html">
    <link rel="stylesheet" href=~/css/Patient/Addpp.css />
    @* <title>@ViewData["Title"]</title> *@
</head>

<body>
  <div class="add-edit-patient-content">
    <h1>Додати препарат</h1>
    <hr>
      <div class="container">
          <form asp-controller="Medicine" asp-action="Add" method="post" class="add-medicine-form">
              <div class="container-left">
                  <div class="d-flex flex-column">
                      <label> Назва препарату: </label>
                      <input type="text" name="name" asp-for="Name" placeholder="лікарство" size="15" required />
                  </div>
                  <div class="d-flex flex-column mt-4">
                      <label>
                          Фармакоцептична група:
                      </label>
                      <div>
                          <datalist id="suggestions">
                              @foreach (var item in ViewBag.Groups)
                              {
                                  <option id=@item.Id>@item.Title</option>
                              }
                          </datalist>
                          <input type="text" onfocus="this.value=''" onchange="this.blur();" asp-for="TempPharmacotherapeuticGroup" autoComplete="on" placeholder="Фармакоцептична група" list="suggestions" />
                      </div>
                  </div>
                  <div class="d-flex flex-column mt-4">
                      <label>
                          Склад:
                      </label>
                      <div>
                          <datalist id="CompositionSuggestions">
                              @foreach (var item in ViewBag.MedicineCompositions)
                              {
                                  <option id=@item.Id>@item.Description</option>
                              }
                          </datalist>
                          <input type="text" onfocus="this.value=''" onchange="this.blur();" id="composition_suggestions_input" autoComplete="on" placeholder="склад" list="CompositionSuggestions" />
                      </div>
                      <textarea asp-for="TempMedicineCompositions" cols="80" rows="5" id="selectedStorageOptionsTextArea" class="mt-1"></textarea>
                      <button type="button" class="btn btn-danger mt-1" style="width: 65%;" onclick="clearSelectedStorageOptionsTextArea()">Видалити</button>
                  </div>
                  <div class="d-flex flex-column mt-4">
                      <label>
                          Противопоказання:
                      </label>
                      <div>
                          <datalist id="ContraindicationSuggestions">
                              @foreach (var item in ViewBag.Contraindications)
                              {
                                  <option id=@item.Id>@item.Title</option>
                              }
                          </datalist>
                          <input type="text" onfocus="this.value=''" onchange="this.blur();" id="contraindication_suggestions_input" autoComplete="on" placeholder="противопоказання" list="ContraindicationSuggestions" />
                      </div>
                      <textarea asp-for="TempMedicineContraindications" cols="80" rows="5" id="selectedContraindicationOptionsTextArea" class="mt-1"></textarea>
                      <button type="button" class="btn btn-danger mt-1" style="width: 65%;" onclick="clearSelectedContraindicationOptionsTextArea()">Видалити</button>
                  </div>
              </div>
              <hr />
              <button type="submit" class="submit-button btn btn-primary mt-3" style="width: 65%;">Додати препарат</button>
          </form>
      </div>
  </div>
      <script>
        //const storageSuggestions = document.getElementById('storageSuggestions').childNodes;
        const CompositionSuggestionsInput = document.getElementById("composition_suggestions_input");
        let eventSource = null;

        CompositionSuggestionsInput.addEventListener('keydown', (event) => {
            if(event.key === 'Enter') {
                event.preventDefault(); // не перекине на інший інпут
                document.getElementById("selectedStorageOptionsTextArea").innerHTML += document.getElementById("composition_suggestions_input").value +'\n'
            }
            eventSource = event.key ? 'input' : 'list';
        });
        CompositionSuggestionsInput.addEventListener('keydown', (event) => {
            console.log(1);
            if(event.key === 'Enter') {
                console.log(2);
                event.preventDefault(); // не перекине на інший інпут
            }
            eventSource = event.key ? 'input' : 'list';
        });
        CompositionSuggestionsInput.addEventListener('input', (event) => {
            console.log(3);
          if (eventSource === 'list') {
            document.getElementById("selectedStorageOptionsTextArea").innerHTML += event.target.value +'\n';
          }
        });
        function clearSelectedStorageOptionsTextArea() {
          // console.log(document.getElementById("selectedStorageOptionsTextArea").innerHTML)
            const ta = document.getElementById("selectedStorageOptionsTextArea");

            let splittedText = ta.innerHTML.split(/\r?\n/)
          splittedText.splice(-2) 
          ta.innerHTML = splittedText.join('\n');
            ta.innerHTML += "\n";
            return ta;
        }    
        

        const ContraindicationSuggestionsInput = document.getElementById("contraindication_suggestions_input");
        let eventSource2 = null;

        ContraindicationSuggestionsInput.addEventListener('keydown', (event) => {
            if(event.key === 'Enter') {
                event.preventDefault(); // не перекине на інший інпут
                document.getElementById("selectedContraindicationOptionsTextArea").innerHTML += document.getElementById("contraindication_suggestions_input").value +'\n'
            }
            eventSource2 = event.key ? 'input' : 'list';
        });
        ContraindicationSuggestionsInput.addEventListener('input', (event) => {
          if (eventSource2 === 'list') {
            document.getElementById("selectedContraindicationOptionsTextArea").innerHTML += event.target.value +'\n';
          }
        });
        function clearSelectedContraindicationOptionsTextArea() {
          // console.log(document.getElementById("selectedContraindicationOptionsTextArea").innerHTML)
            const ta = document.getElementById("selectedContraindicationOptionsTextArea");

            let splittedText = ta.innerHTML.split(/\r?\n/)
            splittedText.splice(-2)
            ta.innerHTML = splittedText.join('\n');
            ta.innerHTML += "\n";
            return ta;
        }
        
        
                const MedicineInteractionSuggestionsInput = document.getElementById("MedicineInteraction_suggestions_input");
                let eventSource3 = null;
        
                MedicineInteractionSuggestionsInput.addEventListener('keydown', (event) => {
                    if(event.key === 'Enter') {
                        event.preventDefault(); // не перекине на інший інпут
                        document.getElementById("selectedMedicineInteractionOptionsTextArea").innerHTML += document.getElementById("MedicineInteraction_suggestions_input").value +'\n'
                    }
                    eventSource3 = event.key ? 'input' : 'list';
                });
                MedicineInteractionSuggestionsInput.addEventListener('input', (event) => {
                  if (eventSource3 === 'list') {
                    document.getElementById("selectedMedicineInteractionOptionsTextArea").innerHTML += event.target.value +'\n';
                  }
                });
                function clearSelectedMedicineInteractionOptionsTextArea() {
                  // console.log(document.getElementById("selectedContraindicationOptionsTextArea").innerHTML)
                    const ta = document.getElementById("selectedMedicineInteractionOptionsTextArea");

                    let splittedText = ta.innerHTML.split(/\r?\n/)
                    splittedText.splice(-2)
                    ta.innerHTML = splittedText.join('\n');
                    ta.innerHTML += "\n";
                    return ta;
                }

    </script>
</body>